/*You need to print all the steps of discs movement so that all the discs reach the 3rd rod. Also, you need to find the total moves.
Note: The discs are arranged such that the top disc is numbered 1 and the bottom-most disc is numbered N.
Also, all the discs have different sizes and a bigger disc cannot be put on the top of a smaller disc
Expected Time Complexity: O(2N).
Expected Auxiliary Space: O(N).*/
// Initial Template for Java

/*package whatever //do not write package name here */

import java.io.*;
import java.util.*;
class Recursion {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int T = sc.nextInt();//total testcases
        while (T-- > 0) {
            Hanoi obj = new Hanoi();
            int N;
            
            //taking input N
            N = sc.nextInt();

            //calling toh() method 
            System.out.println(obj.toh(N, 1, 3, 2));
        }
    }
}





// } Driver Code Ends


// User function Template for Java


// avoid space at the starting of the string in "move disk....."
class Hanoi {
    long count=0;
    public long toh(int N, int from, int to, int aux) {
        // Your code here
        if(N==1){
            count++;
           System.out.println("move disk 1 from rod "+from+" to rod "+to);
           return count;
        }
        toh(N-1,from,aux,to);
        count++;
        System.out.println("move disk "+N+ " from rod "+ from+ " to rod "+to);
        toh(N-1,aux,to,from);
        return count;
    }
}
